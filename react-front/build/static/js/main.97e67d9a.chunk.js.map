{"version":3,"sources":["serviceWorker.js","Datas/Events.js","ContextEvents.js","Event/AddEvent.js","Event/EventList.js","Event/UpdateEvent.js","Event/List.js","Entities/Owner.js","User/ApplyEvent.js","Entities/User.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","unregister","navigator","serviceWorker","ready","then","registration","catch","error","console","message","func","a","axios","get","result","data","e","log","Event","props","context","React","createContext","ProviderMenu","state","datas","undefined","updated_data","dispatch","action","setState","reducer","type","datas_copy","this","findIndex","id","payload","getDatas","Axios","delete","res","filter","Events","Provider","value","children","Component","EventConsumer","Consumer","AddEvent","event","start_date","finish_date","success","stateVisible","etkinlikEmpty","sdateEmpty","fdateEmpty","preventDefault","post","event_name","event_start_date","event_last_date","persons","Date","now","className","onSubmit","OnSubmit","bind","htmlFor","style","float","name","placeholder","onChange","target","color","fontFamily","inline","maxDate","minDate","EventList","backgroundColor","map","key","toJSON","split","user_count","aria-hidden","cursor","onClick","getTime","update","alert","event_delete","UpdateEvent","footer","label","icon","update_button_handler","onHide","data_change","setDate","getDate","put","visible_update","fdate","sdate","maximizable","header","visible","width","modal","List","succes_toast","update_render","Owner","items","activeItem","model","onTabChange","selected","ApplyEvent","apply","surname","TC_kimlik","Number","isInteger","event_id","tc_kimlik","visible_dialog","maxLength","minLength","inputMode","User","visible_apply","first","rows","clicked_event_id","eventTemplate","item","marginBottom","opacity","creation_date","fontSize","borderRight","marginRight","Button","variant","toLocaleString","value_data","concat","lazy","slice","itemTemplate","totalRecords","length","onPageChange","App","path","fs","require","readline","google","SCOPES","listLabels","auth","gmail","version","users","labels","list","userId","err","forEach","readFile","content","credentials","callback","installed","client_secret","client_id","redirect_uris","oAuth2Client","OAuth2","token","authUrl","generateAuthUrl","access_type","scope","rl","createInterface","input","process","stdin","output","stdout","question","code","close","getToken","setCredentials","writeFile","JSON","stringify","getNewToken","parse","authorize","module","exports","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97e67d9a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nimport axios from \"axios\"\r\n\r\nconst func=async ()=>{\r\n\r\n\r\n    var data= await axios.get(\"http://localhost:8181/events\",\r\n     ).then(result=>{\r\n    return result.data\r\n}).catch(e=>{\r\n    console.log(e);\r\n});\r\nreturn data;\r\n} \r\nexport default function Event(props) {\r\n    return func(); \r\n}\r\n","import React, { Component } from 'react';\r\nimport Events from \"./Datas/Events\"\r\nimport Axios from 'axios';\r\nconst context=React.createContext();\r\n\r\nexport class ProviderMenu extends Component {\r\n    reducer(state,action){\r\n    \r\n        switch(action.type){\r\n            case \"UPDATE\":\r\n                let datas_copy=[...this.state.datas];\r\n                datas_copy[datas_copy.findIndex(e=>e.id===action.payload.id)]=action.payload;\r\n                return(\r\n                    {\r\n                        ...state,\r\n                        datas:datas_copy\r\n                    }\r\n                )\r\n            case \"ADD\":\r\n               this.getDatas();\r\n               break;\r\n            case \"UPDATED_DATA\":\r\n          \r\n                return(\r\n                    {\r\n                        ...state,\r\n                        updated_data:action.payload\r\n                    }\r\n                )\r\n            case \"DELETE_EVENT\":\r\n                console.log(action.payload)\r\n                Axios.delete(\"http://localhost:8181/delete/\"+action.payload).then(res=>{\r\n                  if(res.data){\r\n                      console.log(res.data)\r\n                     \r\n                  }\r\n                });\r\n                return(\r\n                    {\r\n                        ...state,\r\n                        datas:state.datas.filter(e=>e.id!==action.payload)\r\n                    }\r\n                 )\r\n                \r\n            default:\r\n                break;\r\n        }\r\n        \r\n    }\r\n    state={\r\n        datas:undefined,\r\n        updated_data:{},\r\n        dispatch:action=>(this.setState(\r\n                (state)=>(this.reducer(state,action))\r\n            ))\r\n        \r\n    }\r\n    componentDidMount(){\r\n        Events().then(res=>{this.setState({datas:res})}).catch(e=>{\r\n            console.log(e);\r\n          })\r\n    }\r\n    \r\n    getDatas(){\r\n        Events().then(res=>{this.setState({datas:res})}).catch(e=>{\r\n            console.log(e);\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n          <context.Provider value={this.state}>\r\n              {this.props.children}\r\n          </context.Provider>\r\n        )\r\n    }\r\n}\r\nconst EventConsumer=context.Consumer;\r\n\r\nexport default EventConsumer;\r\n","import React,{Component} from \"react\";\r\nimport { Calendar } from 'primereact/calendar';\r\nimport axios from \"axios\";\r\nimport EventConsumer from \"../ContextEvents\";\r\n\r\nclass AddEvent extends Component{\r\n  \r\n \r\n  state={\r\n    event:\"\",\r\n    start_date:0,\r\n    finish_date:0,\r\n    success:false,\r\n    stateVisible:false,\r\n    etkinlikEmpty:false,\r\n    sdateEmpty:false,\r\n    fdateEmpty:false,\r\n\r\n  }\r\n  async OnSubmit(dispatch,e){\r\n    e.preventDefault();\r\n    const {event,start_date,finish_date}=this.state;\r\n   if(start_date===0){\r\n    this.setState({\r\n      sdateEmpty:true\r\n     })\r\n   }else{\r\n    this.setState({\r\n      sdateEmpty:false\r\n     })\r\n   }\r\n   if(finish_date===0){\r\n    this.setState({\r\n     fdateEmpty:true\r\n    })\r\n   }else{\r\n    this.setState({\r\n      fdateEmpty:false\r\n     })\r\n   }\r\n   if(event===\"\"||event===undefined||event===null){\r\n     this.setState({\r\n       etkinlikEmpty:true\r\n     })\r\n   }else{\r\n    this.setState({\r\n      etkinlikEmpty:false\r\n     })\r\n   }\r\n\r\n  if(start_date!==0&&finish_date!==0&&event!==\"\")\r\n  await axios.post(\"http://localhost:8181/newevent\",\r\n  {id:null,event_name:this.state.event,event_start_date:this.state.start_date,event_last_date:this.state.finish_date,persons:null}\r\n  )\r\n  .then(result=>{\r\n   \r\n    if(result.data===true){\r\n      this.setState({\r\n        success:true,\r\n        stateVisible:true\r\n      })\r\n      \r\n    } else this.setState({\r\n      success:false,\r\n      stateVisible:true\r\n    });\r\n\r\n  })\r\n  dispatch({\r\n    type:\"ADD\",\r\n    payload:Date.now()\r\n  })\r\n}\r\n  render(){\r\n    const{stateVisible,success,etkinlikEmpty,sdateEmpty,fdateEmpty}=this.state;\r\n     return (\r\n            <EventConsumer>\r\n              {\r\n   \r\n                value=>{\r\n                     const {dispatch}=value\r\n                     return(\r\n                      <div className=\"card\">\r\n            \r\n                      <div className=\"card-body\">\r\n                      <form onSubmit={this.OnSubmit.bind(this,dispatch)}>\r\n                        \r\n                        <div className=\"form-group mb-5\"> \r\n                         \r\n                         <label htmlFor=\"event\">Etkinlik:</label>\r\n                         <input style={{float:\"left\"}} type=\"text\" name=\"name\" id=\"id\" placeholder=\"Etkinlik\" className=\"form-control\" onChange={(e)=>{this.setState({event:e.target.value})}}></input>\r\n                         {etkinlikEmpty?<label style={{color:\"red\",fontFamily:\"arial\"}}> *Zorunlu</label>:null}\r\n        \r\n                        </div>\r\n                        \r\n                       <br></br>\r\n                        <div className=\"form-group mb-5\">\r\n                         \r\n                         <label htmlFor=\"event\" style={{float:\"left\"}}>Başlangıç Tarihi:</label>\r\n                         <Calendar style={{float:\"left\"}} inline={false} maxDate={this.state.finish_date} minDate={new Date(Date.now())} value={this.state.start_date} onChange={(e) => this.setState({start_date: e.value})}></Calendar>\r\n                         {sdateEmpty?<label style={{color:\"red\",fontFamily:\"arial\"}}> *Zorunlu</label>:null}\r\n                        </div>\r\n                        <br></br>\r\n                        <div className=\"form-group mb-5\">\r\n                         \r\n                         <label htmlFor=\"event\" style={{float:\"left\"}}>Bitiş Tarihi:</label>\r\n                          <Calendar style={{float:\"left\"}} inline={false} minDate={this.state.start_date?this.state.start_date:new Date(Date.now())}  value={this.state.finish_date} onChange={(e) => this.setState({finish_date: e.value})}></Calendar>\r\n                          {fdateEmpty?<label style={{color:\"red\",fontFamily:\"arial\"}}> *Zorunlu</label>:null}\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-dark btn-block\">Ekle</button>\r\n                       </form>\r\n                      </div>\r\n                      {\r\n                     \r\n                           \r\n                           stateVisible?(\r\n                              success? <div className=\"alert alert-success\">\r\n                              <strong>Başarılı!</strong> Etkinlik Başarılı bir şekilde eklendi.\r\n                            </div>:<div className=\"alert alert-warning\">\r\n                              <strong>Hata!</strong> Bir hata oluştu!\r\n                            </div>):<div className=\"alert alert-info\">\r\n                              <strong>Bilgi:</strong> Ek olarak sorular ekleyebilirsiniz.\r\n                            </div>\r\n                            \r\n        \r\n                          \r\n                            \r\n                           \r\n                       } \r\n                     \r\n                    </div>\r\n                     );\r\n                }\r\n              }\r\n            </EventConsumer>\r\n          \r\n\r\n     )\r\n\r\n   }\r\n}\r\nexport default AddEvent;","import React, { Component } from 'react'\r\nimport EventConsumer from '../ContextEvents';\r\n\r\n\r\nexport default class EventList extends Component {\r\n\r\n    render() {\r\n    \r\n\r\n        return (\r\n            <EventConsumer>\r\n                {\r\n                    value=>{\r\n                    \r\n                        const {dispatch,datas} = value;\r\n                          console.log(datas)\r\n                          return (\r\n                            <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <thead className=\"thead-light\">\r\n                                    <tr>\r\n                                        <th>Etkinlik Adı</th>\r\n                                        <th>Başlangıç Tarihi</th>\r\n                                        <th>Bitiş Tarihi</th>\r\n                                        <th>Kayıt olanlar</th>\r\n                                        <th>Kayıt Sayısı</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody style={{backgroundColor:\"white\"}}>\r\n                    \r\n                                     {\r\n                                        datas!==undefined?\r\n                                        datas.map(e=>{return(\r\n                    \r\n                                            <tr key={e.id}>\r\n                                                 <td>\r\n                                                     {e.event_name}\r\n                                                 </td>\r\n                                                 \r\n                                                 <td>{new Date(e.event_start_date).toJSON().split(\"T\")[0]}</td>\r\n            \r\n                                                 <td>\r\n                                                 {new Date(e.event_last_date).toJSON().split(\"T\")[0]}\r\n                                                 </td>\r\n                                                 <td>\r\n                                                 {e.user_count}\r\n                                                 </td>\r\n                                                 <td>\r\n                                                 {e.user_count}\r\n                                                 </td>\r\n                                                 <td><i className=\"fa fa-pencil-square-o\"  aria-hidden=\"true\" style={{cursor:\"pointer\"}} onClick={(event)=>{\r\n                                                     if(new Date(e.event_start_date).getTime()>Date.now()){\r\n                        \r\n                                                        dispatch({type:\"UPDATED_DATA\",payload:e});\r\n                                                        this.props.update();\r\n                                                     }else{\r\n                                                         alert(\"Etkinlik Başaladığı için değişiklik yapılamaz!\");\r\n                                                     }\r\n                                                     }\r\n                                                    }></i></td>\r\n                                                 <td><i className=\"fa fa-trash\" aria-hidden=\"true\" style={{cursor:\"pointer\"}} onClick={(event_delete)=>{dispatch({type:\"DELETE_EVENT\",payload:e.id})}}></i></td>\r\n                                             </tr>\r\n                                         )\r\n                                             \r\n                                         }):null\r\n                                     }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                          )\r\n                    }\r\n                }\r\n            </EventConsumer>\r\n           \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Dialog} from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport Axios from 'axios';\r\nimport EventConsumer from '../ContextEvents';\r\nexport default class UpdateEvent extends Component {\r\n    footer = (\r\n        <EventConsumer>\r\n               {\r\n                   value=>{\r\n                       return(\r\n                        <div>\r\n                        <Button label=\"Güncelle\" icon=\"pi pi-check\" onClick={this.update_button_handler.bind(this,value.dispatch,value.updated_data)}/>\r\n                        <Button label=\"Vazgeç\" icon=\"pi pi-times\" onClick={this.onHide.bind(this)} />\r\n                       </div>\r\n                       )\r\n                   }\r\n               }\r\n        </EventConsumer>\r\n       \r\n    )\r\n  \r\n  \r\n    async update_button_handler(dispatch,data_change,e){\r\n      const {event,start_date,finish_date}=this.state;\r\n      var event_name=event===\"\"?data_change.event_name:event;\r\n      var event_start_date=start_date===0?new Date(data_change.event_start_date):new Date(start_date);\r\n      var event_last_date=finish_date===0?new Date(data_change.event_last_date):new Date(finish_date);\r\n      event_start_date.setDate(event_start_date.getDate()+1)\r\n      event_last_date.setDate(event_last_date.getDate()+1)\r\n      \r\n      let data={...data_change,event_name,event_start_date,event_last_date}\r\n      console.log(data);\r\n      await Axios.put(\"http://localhost:8181/update\",data).then(result=>{\r\n          if(result.data){\r\n            dispatch({type:\"UPDATE\",payload:data})\r\n            this.props.update();\r\n          }else{\r\n              console.log(\"Bir hata oluştu...\");\r\n          }\r\n      });\r\n    \r\n      \r\n    }\r\n  \r\n \r\n    state={\r\n        event:this.data,\r\n        start_date:0,\r\n        finish_date:0,\r\n     \r\n       }\r\n    onHide(e){\r\n      this.props.update();\r\n    }\r\n   \r\n\r\n    \r\n \r\n    render() {\r\n        \r\n        const visible_update=this.props.visible_update;\r\n        \r\n       \r\n        return (\r\n               <EventConsumer>\r\n                   {\r\n                       value=>{\r\n                        console.log(value.updated_data);\r\n                                       const {updated_data}=value;\r\n                \r\n                                       let fdate;\r\n                                       let sdate;\r\n                                       if(updated_data!==undefined){\r\n                                        fdate=new Date(updated_data.event_last_date);\r\n                                        sdate=new Date(updated_data.event_start_date);\r\n                                       }\r\n                                     \r\n                                       return(\r\n                                        <Dialog maximizable={true} header={updated_data.event_name} footer={this.footer}   visible={visible_update} style={{width: '50vw'}} modal={true} onHide={this.onHide.bind(this)}>\r\n                                        <form>\r\n                                            <div className=\"form-group mb-5\">\r\n                                                <label htmlFor=\"name\">Etkinlik</label>\r\n                                                <input style={{float:\"left\"}} type=\"text\" value={this.state.event_name} name=\"name\" id=\"id\" placeholder=\"Etkinlik\" className=\"form-control\" onChange={(e)=>this.setState({event:e.value})}></input>\r\n                        \r\n                                            </div>\r\n                                            <div className=\"form-group mb-3\">\r\n                                                <label htmlFor=\"start_date\">Başlangıç Tarihi</label>\r\n                                                <Calendar  inline={false} maxDate={this.state.start_date===0?new Date(updated_data.event_last_date):this.state.finish_date} minDate={new Date(Date.now())} value={sdate} onChange={(e) => this.setState({start_date: e.target.value})}></Calendar>\r\n                        \r\n                                            </div>\r\n                                            <div className=\"form-group mb-3\">\r\n                                                <label htmlFor=\"finish_date\">Bitiş Tarihi</label>\r\n                                                <Calendar inline={false} minDate={(this.state.start_date?new Date(updated_data.event_start_date):this.state.start_date)?this.state.start_date:new Date(Date.now())}  value={fdate} onChange={(e) => this.setState({finish_date: e.target.value})}></Calendar>\r\n                        \r\n                                            </div>\r\n                                        </form>\r\n                                      </Dialog>\r\n                                       )\r\n                       }\r\n                   }\r\n               </EventConsumer>\r\n              \r\n        )\r\n    \r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport EventList from './EventList'\r\nimport UpdateEvent from './UpdateEvent'\r\nimport EventConsumer from '../ContextEvents';\r\nexport default class List extends Component {\r\n    state={\r\n        visible_update:false,\r\n        succes_toast:false\r\n        \r\n    }\r\n    \r\n \r\n    update_render=()=>{this.setState({\r\n        visible_update:!this.state.visible_update})}\r\n    render() {\r\n        const {visible_update} = this.state;\r\n    \r\n        return (\r\n         <EventConsumer>\r\n             {\r\n                 value=>{\r\n                \r\n                     return(\r\n                      <div>\r\n                         <EventList update={this.update_render}></EventList>\r\n                \r\n                           {\r\n                             visible_update?\r\n                             <UpdateEvent update={()=>this.setState({\r\n                              visible_update:false})} visible_update={visible_update}></UpdateEvent>:false\r\n                           }\r\n            \r\n                       </div>\r\n            \r\n        \r\n                     )\r\n                 }\r\n             }\r\n         </EventConsumer>\r\n             \r\n           \r\n            \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport AddEvent from \"../Event/AddEvent\"\r\nimport {TabMenu} from 'primereact/tabmenu';\r\nimport List from \"../Event/List\"\r\nexport default class Owner extends Component {\r\n    state={\r\n        items: [\r\n            {label: 'Anasayfa', icon: 'pi pi-fw pi-home'},\r\n            {label: 'Etkinlik Ekle', icon: 'pi pi-fw pi-calendar'},\r\n            {label: 'Düzenle', icon: 'pi pi-fw pi-pencil'},\r\n            {label: 'Etkinlikler', icon: 'pi pi-fw pi-file'},\r\n            {label: 'Ayarlar', icon: 'pi pi-fw pi-cog'}\r\n        ],\r\n        activeItem:{label: 'Anasayfa', icon: 'pi pi-fw pi-home'}\r\n    \r\n        \r\n    }\r\n    render() {\r\n        const{activeItem} = this.state;\r\n        const selected=(activeItem)=>{\r\n               switch(activeItem){\r\n                 case this.state.items[0]:\r\n                   break;\r\n                case this.state.items[1]:\r\n                    return <AddEvent/>\r\n                case this.state.items[2]:\r\n                   break;\r\n                case this.state.items[3]:\r\n                    return <List/>\r\n                case this.state.items[4]:\r\n                    break;\r\n                default:\r\n                   return null;\r\n               }\r\n        }\r\n        return (\r\n            <div>\r\n                 <TabMenu model={this.state.items} activeItem={this.state.activeItem} onTabChange={(e) => this.setState({activeItem: e.value})}/>\r\n                    {\r\n                     selected(activeItem)\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport EventConsumer from '../ContextEvents'\r\nimport {Dialog} from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport Axios from 'axios';\r\nexport default class ApplyEvent extends Component {\r\n    footer = (\r\n        <EventConsumer>\r\n               {\r\n                   value=>{\r\n                       return(\r\n                        <div>\r\n                        <Button label=\"Başvur\" icon=\"pi pi-check\" onClick={this.apply.bind(this,value.dispatch)}/>\r\n                        <Button label=\"Vazgeç\" icon=\"pi pi-times\" onClick={this.onHide.bind(this)} />\r\n                       </div>\r\n                       )\r\n                   }\r\n               }\r\n        </EventConsumer>\r\n       \r\n    )\r\n    async apply(dispatch,e){\r\n      const{TC_kimlik,name,surname}=this.state;\r\n\r\n      Number.isInteger(TC_kimlik-0)?await Axios.post(\"http://localhost:8181/apply?event_id=\"+this.props.event_id,{tc_kimlik:TC_kimlik,name:name,surname:surname})\r\n      .then(res=>{\r\n           console.log(res.data);\r\n           dispatch({type:\"ADD\"})\r\n           this.props.visible();\r\n      }):alert(\"TC kimlik numerik olmalı!\");\r\n    }\r\n    state={\r\n        name:\"\",\r\n        surname:\"\",\r\n        TC_kimlik:\"\"\r\n    }\r\n    \r\n    onHide(e){\r\n        this.props.visible();\r\n        this.setState({name:\"\",surname:\"\",TC_kimlik:\"\"})\r\n   \r\n        \r\n    }\r\n    render() {\r\n        const visible_dialog=this.props.visible_dialog;\r\n        return (\r\n          <EventConsumer>\r\n              {\r\n                  value=>{\r\n                      \r\n                      return(\r\n                                      <Dialog maximizable={true} header={\"Başvuru\"} footer={this.footer}   visible={visible_dialog} style={{width: '50vw'}} modal={true} onHide={this.onHide.bind(this)}>\r\n                                        <form>\r\n                                            <div className=\"form-group mb-5\">\r\n                                                <label htmlFor=\"name\">Adı:</label>\r\n                                                <input style={{float:\"left\"}} type=\"text\" value={this.state.name} name=\"name\" id=\"id\" placeholder=\"Name\" className=\"form-control\" onChange={(e)=>this.setState({name:e.target.value})}></input>\r\n                        \r\n                                            </div>\r\n                                            <div className=\"form-group mb-3\">\r\n                                                <label htmlFor=\"surname\">Soyadı:</label>\r\n                                                <input style={{float:\"left\"}} type=\"text\" value={this.state.surname} name=\"surname\" placeholder=\"Surname\" className=\"form-control\" onChange={(e)=>this.setState({surname:e.target.value})}></input>\r\n                        \r\n                                            </div>\r\n                                            <div className=\"form-group mb-3\">\r\n                                                <label htmlFor=\"TC_kimlik\">TC Kimlik</label>\r\n                                                <input maxLength={11} minLength={11} inputMode=\"numeric\" style={{float:\"left\"}} type=\"text\" value={this.state.TC_kimlik} name=\"TC\"  placeholder=\"TC\" className=\"form-control\" onChange={(e)=>this.setState({TC_kimlik:e.target.value})}></input>\r\n                        \r\n                                            </div>\r\n                                        </form>\r\n                                      </Dialog>\r\n                      )\r\n                  }\r\n              }\r\n                        \r\n          </EventConsumer>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport EventConsumer from '../ContextEvents';\r\nimport {DataScroller} from 'primereact/datascroller';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport Button from '@material-ui/core/Button';\r\nimport ApplyEvent from '../User/ApplyEvent';\r\nimport {Paginator} from 'primereact/paginator';\r\n\r\nexport default class User extends Component {\r\n    constructor() {\r\n        super();\r\n    \r\n        this.eventTemplate=this.eventTemplate.bind(this);\r\n    }\r\n  \r\n    state={\r\n        visible_apply:false,\r\n        first:0,\r\n        rows:5,\r\n        clicked_event_id:undefined\r\n\r\n    }\r\n    eventTemplate(item) {\r\n      \r\n       \r\n        \r\n                return(\r\n                <div className=\"card\" style={{marginBottom:\"20px\",opacity:item.user_count===10?\"70%\":\"100%\"}}>\r\n                <div className=\"card-header\"><h3>Etkinlik Adı:{item.event_name}</h3>Eklenme Tarihi : {item.creation_date.split(\"T\")[0]}</div>\r\n                <div className=\"card-body\">\r\n                                 \r\n                   <div style={{float:\"left\"}}><CalendarTodayIcon fontSize=\"large\" style={{borderRight:\"solid 2px\",marginRight:\"20px\"}}/>Etkinliği katılmanızı bekleriz...</div> \r\n                  {\r\n                      item.user_count===10?<h4 style={{float:\"right\"}}>Doldu</h4>:<Button color=\"primary\" variant=\"contained\" style={{float:\"right\"}} onClick={(e)=>this.setState({visible_apply:true,clicked_event_id:item.id})}>Katıl</Button>\r\n\r\n                  }\r\n                    </div>\r\n                <div className=\"card-footer\" style={{backgroundColor:\"skyblue\",color:\"white\"}}>   Başlangıç Tarihi : {new Date(item.event_start_date).toLocaleString(\"tr-TR\").split(\" \")[0]}-Bitiş Tarihi : {new Date(item.event_last_date).toLocaleString(\"tr-TR\").split(\" \")[0]}</div>\r\n              </div>)\r\n       \r\n     \r\n    }\r\n   loadData(event){\r\n      \r\n          \r\n           \r\n       \r\n      \r\n   }\r\n    render() {\r\n        return (\r\n          <EventConsumer>\r\n              {\r\n                  value_data=>{\r\n                      \r\n                      \r\n                      const {clicked_event_id,visible_apply}=this.state;\r\n                      let datas=[];\r\n                      datas=datas.concat(value_data.datas);\r\n                      datas.filter(e=>{\r\n                            if(Date.now()<new Date({...e}.event_start_date).getTime())\r\n                             return true;\r\n                             else return false;\r\n                    });\r\n                      \r\n                      return(\r\n                          <div>\r\n                             <DataScroller lazy={true} header=\"Events\" value={datas.slice((this.state.first/5)*this.state.rows,this.state.rows+(this.state.first/5)*this.state.rows)} itemTemplate={this.eventTemplate} ></DataScroller>\r\n                            {visible_apply?<ApplyEvent event_id={clicked_event_id}  visible_dialog={visible_apply} visible={()=>this.setState({visible_apply:false})}></ApplyEvent>:false} \r\n                             <Paginator totalRecords={datas.length}   first={this.state.first}  rows={this.state.rows} onPageChange={(e) => this.setState({first: e.first})}></Paginator>\r\n                             \r\n                          </div>\r\n\r\n\r\n                     \r\n                      )\r\n                  }\r\n              }\r\n          </EventConsumer>\r\n\r\n          \r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {Component} from \"react\";\nimport { ProviderMenu } from './ContextEvents';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Owner from './Entities/Owner';\nimport User from './Entities/User';\n\n//\n\n\nclass App extends Component{\n\n\nrender(){\n\n  return (\n   \n     <div className=\"App pt-2 pl-2 pr-2\">\n       \n       <ProviderMenu>\n        <Router>\n          \n          <Route path=\"/owner\"><Owner></Owner></Route>\n          <Route path=\"/user\"><User/></Route>\n        </Router>\n       \n       </ProviderMenu>\n      \n    </div>\n\n  \n  );\n}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\n/**\n * @license\n * Copyright Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// [START gmail_quickstart]\nconst fs = require('fs');\nconst readline = require('readline');\nconst {google} = require('googleapis');\n\n// If modifying these scopes, delete token.json.\nconst SCOPES = ['https://www.googleapis.com/auth/gmail.readonly'];\n// The file token.json stores the user's access and refresh tokens, and is\n// created automatically when the authorization flow completes for the first\n// time.\nconst TOKEN_PATH = 'token.json';\n\n// Load client secrets from a local file.\nfs.readFile('credentials.json', (err, content) => {\n  if (err) return console.log('Error loading client secret file:', err);\n  // Authorize a client with credentials, then call the Gmail API.\n  authorize(JSON.parse(content), listLabels);\n});\n\n/**\n * Create an OAuth2 client with the given credentials, and then execute the\n * given callback function.\n * @param {Object} credentials The authorization client credentials.\n * @param {function} callback The callback to call with the authorized client.\n */\nfunction authorize(credentials, callback) {\n  const {client_secret, client_id, redirect_uris} = credentials.installed;\n  const oAuth2Client = new google.auth.OAuth2(\n      client_id, client_secret, redirect_uris[0]);\n\n  // Check if we have previously stored a token.\n  fs.readFile(TOKEN_PATH, (err, token) => {\n    if (err) return getNewToken(oAuth2Client, callback);\n    oAuth2Client.setCredentials(JSON.parse(token));\n    callback(oAuth2Client);\n  });\n}\n\n/**\n * Get and store new token after prompting for user authorization, and then\n * execute the given callback with the authorized OAuth2 client.\n * @param {google.auth.OAuth2} oAuth2Client The OAuth2 client to get token for.\n * @param {getEventsCallback} callback The callback for the authorized client.\n */\nfunction getNewToken(oAuth2Client, callback) {\n  const authUrl = oAuth2Client.generateAuthUrl({\n    access_type: 'offline',\n    scope: SCOPES,\n  });\n  console.log('Authorize this app by visiting this url:', authUrl);\n  const rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n  });\n  rl.question('Enter the code from that page here: ', (code) => {\n    rl.close();\n    oAuth2Client.getToken(code, (err, token) => {\n      if (err) return console.error('Error retrieving access token', err);\n      oAuth2Client.setCredentials(token);\n      // Store the token to disk for later program executions\n      fs.writeFile(TOKEN_PATH, JSON.stringify(token), (err) => {\n        if (err) return console.error(err);\n        console.log('Token stored to', TOKEN_PATH);\n      });\n      callback(oAuth2Client);\n    });\n  });\n}\n\n/**\n * Lists the labels in the user's account.\n *\n * @param {google.auth.OAuth2} auth An authorized OAuth2 client.\n */\nfunction listLabels(auth) {\n  const gmail = google.gmail({version: 'v1', auth});\n  gmail.users.labels.list({\n    userId: 'me',\n  }, (err, res) => {\n    if (err) return console.log('The API returned an error: ' + err);\n    const labels = res.data.labels;\n    if (labels.length) {\n      console.log('Labels:');\n      labels.forEach((label) => {\n        console.log(`- ${label.name}`);\n      });\n    } else {\n      console.log('No labels found.');\n    }\n  });\n}\n// [END gmail_quickstart]\n\nmodule.exports = {\n  SCOPES,\n  listLabels,\n};\nReactDOM.render(\n\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}